{
  "name": "base62-node",
  "version": "0.3.1",
  "author": {
    "name": "sasa+1",
    "email": "sasaplus1@gmail.com"
  },
  "description": "base62 encode/decode library",
  "main": "./index.js",
  "license": "MIT",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/sasaplus1/base62.js.git"
  },
  "scripts": {
    "fix": "fixjsstyle --strict --nojsdoc -r ./lib -r ./test",
    "lint": "gjslint --strict --nojsdoc -r ./lib -r ./test",
    "mini": "curl -s -d output_info=compiled_code --data-urlencode js_code@./lib/base62.js http://closure-compiler.appspot.com/compile > ./base62.min.js",
    "pretest": "./node_modules/.bin/bower install",
    "test": "./node_modules/.bin/mocha && ./node_modules/.bin/testem ci"
  },
  "devDependencies": {
    "bower": "~0.8",
    "chai": "~1.5",
    "mocha": "~1.8",
    "testem": "~0.2"
  },
  "readme": "# base62.js [![Build Status](https://travis-ci.org/sasaplus1/base62.js.png)](https://travis-ci.org/sasaplus1/base62.js)\n\nbase62 encode/decode library\n\n## Installation\n\n### from npm\n\n    $ npm install base62-node\n\n### from bower\n\n    $ bower install base62\n\n## Usage\n\n### for node.js\n\n```js\nvar Base62 = require('base62-node');\n```\n\n### for the browser\n\n```html\n<script src=\"base62.min.js\"></script>\n```\n\n### basic usage\n\n```js\nvar base62 = new Base62;\n\nbase62.encode(39134);  // \"abc\"\nbase62.decode('abc');  // 39134\n```\n\n```js\nvar base62 = new Base62('09AZaz');\n\nbase62.encode(39134);  // \"ABC\"\nbase62.decode('ABC');  // 39134\n```\n\n## Functions\n\n### constructor(tableKeyStr)\n\n* `tableKeyStr` string - base62 convert table key\n\n`tableKeyStr` can set values below.\n\n* \"09azAZ\"\n* \"09AZaz\"\n\nif not parameter, value is \"09azAZ\".\n\nif parameter is not string types, throws TypeError.\n\nif unknown tableKey, throws Error.\n\n```js\nnew Base62;            // use \"09azAZ\" table\nnew Base62('09azAZ');  // use \"09azAZ\" table\nnew Base62('09AZaz');  // use \"09AZaz\" table\n\nnew Base62(12345678);  // throws TypeError\nnew Base62('AZaz09');  // throws Error\n```\n\n### decode(str)\n\n* `str` string - base62 string\n\nconvert to decimal number from base62 string.\n\nif parameter is not string types, throws TypeError.\n\nif unsupported string format, throws Error.\nstring format should be match for regexp of `^-?[\\da-zA-Z]+$`.\n\n```js\n// \"09azAZ\" table\nbase62.decode('Z');    //  61\nbase62.decode('10');   //  62\nbase62.decode('-10');  // -62\n\nbase62.decode(12345);  // throws TypeError\nbase62.decode('!@=');  // throws Error\n```\n\n### encode(num)\n\n* `num` number - number value\n\nconvert to base62 string from decimal number.\n\nif parameter is not number types, throws TypeError.\n\nif not a finite number(NaN, Infinity, -Infinity), throws Error.\n\n```js\n// \"09azAZ\" table\nbase62.encode(61);    // \"Z\"\nbase62.encode(62);    // \"10\"\nbase62.encode(-62);   // \"-10\"\n\nbase62.encode('1');  // throws TypeError\nbase62.encode(NaN);  // throws Error\n```\n\n## Test\n\n    $ npm install\n    $ npm test\n\n## License\n\nThe MIT License. Please see LICENSE file.\n",
  "_id": "base62-node@0.3.1",
  "dist": {
    "shasum": "7cba33c4c72c7208fbdd1f99f1baa2f911c3f078",
    "tarball": "http://registry.npmjs.org/base62-node/-/base62-node-0.3.1.tgz"
  },
  "_from": "base62-node@*",
  "_npmVersion": "1.2.15",
  "_npmUser": {
    "name": "sasaplus1",
    "email": "sasaplus1@gmail.com"
  },
  "maintainers": [
    {
      "name": "sasaplus1",
      "email": "sasaplus1@gmail.com"
    }
  ],
  "directories": {},
  "deprecated": "renamed from base62-node to base62.js",
  "_shasum": "7cba33c4c72c7208fbdd1f99f1baa2f911c3f078",
  "_resolved": "https://registry.npmjs.org/base62-node/-/base62-node-0.3.1.tgz"
}
