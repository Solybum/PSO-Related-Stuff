/* NJA 0.88alpha2 NinjaAsciiDataMix CnkModel (SI) */

/* ROOT OBJECT : object_sphere1_sphere1 n(1) d(1) */


CNKOBJECT_START

PLIST      strip_sphere1_sphere1[]
START
	CnkM_DAS( FBS_SA|FBD_ISA ), 6,
	MDiff( 255, 178, 178, 178 ),
	MAmbi( 255, 127, 127, 127 ),
	MSpec( 11, 255, 255, 255 ),
	CnkS( FST_FL ), 150, _NB( UFO_0, 12 ),
	StripR(12),  7, 13, 6, 12, 5, 11, 4, 10, 3, 9, 
                   2, 0, 
	StripL(42),  8, 7, 14, 13, 20, 19, 26, 25, 32, 31, 
                   38, 37, 44, 0, 51, 2, 52, 3, 53, 4, 
                   54, 5, 55, 6, 56, 7, 57, 8, 1, 15, 
                   22, 21, 28, 27, 34, 33, 40, 39, 46, 45, 
                   52, 51, 
	StripR(10),  13, 19, 12, 18, 11, 17, 10, 16, 9, 0, 
	StripR(8),  19, 25, 18, 24, 17, 23, 16, 0, 
	StripL(4),  28, 29, 22, 1, 
	StripR(6),  25, 31, 24, 30, 23, 0, 
	StripR(6),  34, 28, 35, 29, 36, 1, 
	StripL(4),  31, 30, 37, 0, 
	StripR(8),  40, 34, 41, 35, 42, 36, 43, 1, 
	StripR(10),  46, 40, 47, 41, 48, 42, 49, 43, 50, 1, 
	StripR(14),  51, 44, 45, 38, 39, 32, 33, 26, 27, 20, 
                   21, 14, 15, 8, 
	StripR(12),  52, 46, 53, 47, 54, 48, 55, 49, 56, 50, 
                   57, 1, 
	CnkNull(),
	CnkEnd()
END

VLIST      vertex_sphere1_sphere1[]
START
	CnkV_VN(0, 349),
	OffnbIdx(0, 58),
	VERT( 0x00000000, 0xc0a00000, 0x00000000 ),
	NORM( 0xb20e8bdb, 0xbf800000, 0xb03e0fce ),
	VERT( 0x00000000, 0x40a00000, 0x00000000 ),
	NORM( 0xb13e0fce, 0x3f800000, 0x313e0fce ),
	VERT( 0x3ff4eadb, 0xc093d21b, 0x00000000 ),
	NORM( 0x3ed85ccc, 0xbf6804dd, 0x32904465 ),
	VERT( 0x40624630, 0xc0624630, 0x00000000 ),
	NORM( 0x3f3ac853, 0xbf2f1108, 0x33169293 ),
	VERT( 0x4093d21b, 0xbff4eada, 0x00000000 ),
	NORM( 0x3f6e284e, 0xbebbcc4e, 0x324fb1ee ),
	VERT( 0x40a00000, 0x346aac7a, 0x00000000 ),
	NORM( 0x3f800000, 0x00000000, 0x00000000 ),
	VERT( 0x4093d21b, 0x3ff4eade, 0x00000000 ),
	NORM( 0x3f6e284e, 0x3ebbcc50, 0x31cfb1ee ),
	VERT( 0x40624630, 0x40624630, 0x00000000 ),
	NORM( 0x3f3ac852, 0x3f2f1109, 0x31c8c36d ),
	VERT( 0x3ff4eadd, 0x4093d21b, 0x00000000 ),
	NORM( 0x3ed85ccc, 0x3f6804de, 0x31405b32 ),
	VERT( 0x3fad2ec9, 0xc093d21b, 0xbfad2ec9 ),
	NORM( 0x3e98fdca, 0xbf6804dd, 0xbe98fdcb ),
	VERT( 0x40200000, 0xc0624630, 0xc0200000 ),
	NORM( 0x3f041340, 0xbf2f1107, 0xbf041341 ),
	VERT( 0x40510cd1, 0xbff4eada, 0xc0510cd1 ),
	NORM( 0x3f286719, 0xbebbcc4d, 0xbf28671b ),
	VERT( 0x40624630, 0x346aac7a, 0xc0624630 ),
	NORM( 0x3f3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0x40510cd1, 0x3ff4eade, 0xc0510cd1 ),
	NORM( 0x3f286719, 0x3ebbcc51, 0xbf28671a ),
	VERT( 0x40200000, 0x40624630, 0xc0200000 ),
	NORM( 0x3f04133f, 0x3f2f1107, 0xbf041340 ),
	VERT( 0x3fad2eca, 0x4093d21b, 0xbfad2eca ),
	NORM( 0x3e98fdca, 0x3f6804de, 0xbe98fdcc ),
	VERT( 0x00000000, 0xc093d21b, 0xbff4eada ),
	NORM( 0xb2405b32, 0xbf6804de, 0xbed85ccc ),
	VERT( 0x00000000, 0xc0624630, 0xc0624630 ),
	NORM( 0xb2c8c36f, 0xbf2f1107, 0xbf3ac855 ),
	VERT( 0x00000000, 0xbff4eada, 0xc093d21a ),
	NORM( 0x00000000, 0xbebbcc4e, 0xbf6e284f ),
	VERT( 0x00000000, 0x346aac7a, 0xc0a00000 ),
	NORM( 0x00000000, 0x00000000, 0xbf800000 ),
	VERT( 0x00000000, 0x3ff4eade, 0xc093d21a ),
	NORM( 0xb24fb1ed, 0x3ebbcc50, 0xbf6e284f ),
	VERT( 0x00000000, 0x40624630, 0xc0624630 ),
	NORM( 0xb2969293, 0x3f2f1108, 0xbf3ac854 ),
	VERT( 0x00000000, 0x4093d21b, 0xbff4eadc ),
	NORM( 0x31904466, 0x3f6804de, 0xbed85ccc ),
	VERT( 0xbfad2ec8, 0xc093d21b, 0xbfad2ec8 ),
	NORM( 0xbe98fdcb, 0xbf6804dd, 0xbe98fdca ),
	VERT( 0xc0200000, 0xc0624630, 0xc0200000 ),
	NORM( 0xbf041341, 0xbf2f1106, 0xbf041341 ),
	VERT( 0xc0510cd0, 0xbff4eada, 0xc0510cd0 ),
	NORM( 0xbf28671a, 0xbebbcc4e, 0xbf28671b ),
	VERT( 0xc0624630, 0x346aac7a, 0xc0624630 ),
	NORM( 0xbf3504f3, 0x00000000, 0xbf3504f3 ),
	VERT( 0xc0510cd0, 0x3ff4eade, 0xc0510cd0 ),
	NORM( 0xbf28671a, 0x3ebbcc52, 0xbf28671b ),
	VERT( 0xc0200000, 0x40624630, 0xc0200000 ),
	NORM( 0xbf041341, 0x3f2f1108, 0xbf041341 ),
	VERT( 0xbfad2eca, 0x4093d21b, 0xbfad2eca ),
	NORM( 0xbe98fdcd, 0x3f6804de, 0xbe98fdcb ),
	VERT( 0xbff4ead9, 0xc093d21b, 0x00000000 ),
	NORM( 0xbed85ccc, 0xbf6804de, 0x00000000 ),
	VERT( 0xc0624630, 0xc0624630, 0x00000000 ),
	NORM( 0xbf3ac855, 0xbf2f1106, 0x00000000 ),
	VERT( 0xc093d21a, 0xbff4eada, 0x00000000 ),
	NORM( 0xbf6e284f, 0xbebbcc4e, 0x00000000 ),
	VERT( 0xc0a00000, 0x346aac7a, 0x00000000 ),
	NORM( 0xbf800000, 0x00000000, 0x00000000 ),
	VERT( 0xc093d21a, 0x3ff4eade, 0x00000000 ),
	NORM( 0xbf6e284f, 0x3ebbcc50, 0x00000000 ),
	VERT( 0xc0624630, 0x40624630, 0x00000000 ),
	NORM( 0xbf3ac854, 0x3f2f1108, 0x31c8c36f ),
	VERT( 0xbff4eadc, 0x4093d21b, 0x00000000 ),
	NORM( 0xbed85ccc, 0x3f6804de, 0xb1904466 ),
	VERT( 0xbfad2ec8, 0xc093d21b, 0x3fad2ec8 ),
	NORM( 0xbe98fdca, 0xbf6804dd, 0x3e98fdcb ),
	VERT( 0xc0200000, 0xc0624630, 0x40200000 ),
	NORM( 0xbf041341, 0xbf2f1106, 0x3f041341 ),
	VERT( 0xc0510cd0, 0xbff4eada, 0x40510cd0 ),
	NORM( 0xbf28671b, 0xbebbcc4e, 0x3f28671a ),
	VERT( 0xc0624630, 0x346aac7a, 0x40624630 ),
	NORM( 0xbf3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0xc0510cd0, 0x3ff4eade, 0x40510cd0 ),
	NORM( 0xbf28671a, 0x3ebbcc51, 0x3f28671a ),
	VERT( 0xc0200000, 0x40624630, 0x40200000 ),
	NORM( 0xbf041341, 0x3f2f1108, 0x3f041341 ),
	VERT( 0xbfad2eca, 0x4093d21b, 0x3fad2eca ),
	NORM( 0xbe98fdcb, 0x3f6804de, 0x3e98fdcd ),
	VERT( 0x00000000, 0xc093d21b, 0x3ff4ead9 ),
	NORM( 0x00000000, 0xbf6804de, 0x3ed85ccc ),
	VERT( 0x00000000, 0xc0624630, 0x40624630 ),
	NORM( 0x00000000, 0xbf2f1106, 0x3f3ac855 ),
	VERT( 0x00000000, 0xbff4eada, 0x4093d21a ),
	NORM( 0x00000000, 0xbebbcc4e, 0x3f6e284f ),
	VERT( 0x00000000, 0x346aac7a, 0x40a00000 ),
	NORM( 0x00000000, 0x00000000, 0x3f800000 ),
	VERT( 0x00000000, 0x3ff4eade, 0x4093d21a ),
	NORM( 0x00000000, 0x3ebbcc50, 0x3f6e284f ),
	VERT( 0x00000000, 0x40624630, 0x40624630 ),
	NORM( 0xb1c8c36f, 0x3f2f1108, 0x3f3ac854 ),
	VERT( 0x00000000, 0x4093d21b, 0x3ff4eadc ),
	NORM( 0xb1904466, 0x3f6804de, 0x3ed85ccc ),
	VERT( 0x3fad2ec8, 0xc093d21b, 0x3fad2ec8 ),
	NORM( 0x3e98fdcb, 0xbf6804dd, 0x3e98fdcb ),
	VERT( 0x40200000, 0xc0624630, 0x40200000 ),
	NORM( 0x3f041341, 0xbf2f1107, 0x3f041341 ),
	VERT( 0x40510cd0, 0xbff4eada, 0x40510cd0 ),
	NORM( 0x3f28671a, 0xbebbcc4e, 0x3f28671b ),
	VERT( 0x40624630, 0x346aac7a, 0x40624630 ),
	NORM( 0x3f3504f3, 0x00000000, 0x3f3504f3 ),
	VERT( 0x40510cd0, 0x3ff4eade, 0x40510cd0 ),
	NORM( 0x3f28671b, 0x3ebbcc51, 0x3f28671b ),
	VERT( 0x40200000, 0x40624630, 0x40200000 ),
	NORM( 0x3f041340, 0x3f2f1107, 0x3f041340 ),
	VERT( 0x3fad2eca, 0x4093d21b, 0x3fad2eca ),
	NORM( 0x3e98fdcd, 0x3f6804de, 0x3e98fdcb ),
	CnkEnd()
END

CNKMODEL   model_sphere1_sphere1[]
START
VList      vertex_sphere1_sphere1,
PList      strip_sphere1_sphere1,
Center       0.000000F,  0.000000F,  0.000000F,
Radius       7.071068F,
END

CNKOBJECT  object_sphere1_sphere1[]
START
EvalFlags ( 0x00000017 ),
CNKModel   model_sphere1_sphere1,
OPosition  (  0.000000F,  0.000000F,  0.000000F ),
OAngle     (  0.000000F,  0.000000F,  0.000000F ),
OScale     (  1.000000F,  1.000000F,  1.000000F ),
Child       NULL,
Sibling     NULL,
END

CNKOBJECT_END


DEFAULT_START

#ifndef DEFAULT_OBJECT_NAME
#define DEFAULT_OBJECT_NAME object_sphere1_sphere1
#endif

DEFAULT_END

