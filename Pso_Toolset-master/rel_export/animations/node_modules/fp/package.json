{
  "name": "fp",
  "version": "0.1.0",
  "description": "fun with functional programming",
  "main": "lib/fp.js",
  "scripts": {
    "test": "grunt test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/NickHeiner/fp"
  },
  "keywords": [
    "functional",
    "programming"
  ],
  "author": {
    "name": "Nick Heiner"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/NickHeiner/fp/issues"
  },
  "devDependencies": {
    "grunt-mocha-test": "~0.7.0",
    "grunt-contrib-jshint": "~0.7.1",
    "grunt": "~0.4.1",
    "chai": "~1.8.1",
    "sinon-chai": "~2.4.0",
    "sinon": "~1.7.3"
  },
  "dependencies": {
    "lodash": "~2.2.1"
  },
  "readme": "fp\n==\n\n> fun with functional programming in js\n\n### Methods\n**fp.fst(fn)**: Returns a function that calls **fn** with only the first argument passed.\n\n**fp.snd(fn)**: Returns a function that calls **fn** with only the second argument passed.\n\n**fp.thd(fn)**: Returns a function that calls **fn** with only the third argument passed.\n\n**fp.nthArg(nth, fn)**: Returns a function that calls **fn** with only the **nth** argument passed.\n\n### Example\n\n````js\n'use strict';\n\nvar fp = require('..'),\n    items = ['foo', 'bar', 'baz'],\n    _ = require('lodash'),\n    indentLog = _.partial(console.log, '  ');\n\nconsole.log();\nconsole.log('Just passing console.log by itself:');\n\nitems.forEach(indentLog);\n\nconsole.log();\nconsole.log('Wrapping console.log in fp.fst to only get the keys:');\n\nitems.forEach(fp.fst(indentLog));\n\nconsole.log();\nconsole.log('Wrapping console.log in fp.snd to only get the values:');\nitems.forEach(fp.snd(indentLog));\n````\n\nThis produces:\n\n````\n$ node example/log.js\n\nJust passing console.log by itself:\n   foo 0 [ 'foo', 'bar', 'baz' ]\n   bar 1 [ 'foo', 'bar', 'baz' ]\n   baz 2 [ 'foo', 'bar', 'baz' ]\n\nWrapping console.log in fp.fst to only get the keys:\n   foo\n   bar\n   baz\n\nWrapping console.log in fp.snd to only get the values:\n   0\n   1\n   2\n````\n\n### Contributing\n\nPRs welcome. I don't have a specific direction in mind yet for this package; I just wanted someplace to stick\nthe small functional tools I keep replicating between projects.",
  "readmeFilename": "README.md",
  "_id": "fp@0.1.0",
  "dist": {
    "shasum": "04dec89e4bbe38ae98550f565c0ba799f99b5608",
    "tarball": "http://registry.npmjs.org/fp/-/fp-0.1.0.tgz"
  },
  "_from": "fp@*",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "nick.heiner",
    "email": "nick.heiner@opower.com"
  },
  "maintainers": [
    {
      "name": "nick.heiner",
      "email": "nick.heiner@opower.com"
    }
  ],
  "directories": {},
  "_shasum": "04dec89e4bbe38ae98550f565c0ba799f99b5608",
  "_resolved": "https://registry.npmjs.org/fp/-/fp-0.1.0.tgz"
}
